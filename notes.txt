<template>
    <div>
        <!-- PayPal button container -->
        <div id="paypal-button-container"></div>
        <p id="result-message"></p>
    </div>
</template>

<script>
export default {
    mounted() {
        this.loadPayPalScript();
    },
    methods: {
        loadPayPalScript() {
            const script = document.createElement("script");

            // Set PayPal SDK URL with necessary parameters
            script.src =
                "https://www.paypal.com/sdk/js?client-id=test&currency=USD&components=buttons&enable-funding=venmo,paylater,card";
            script.setAttribute(
                "data-sdk-integration-source",
                "developer-studio"
            );

            // Load the PayPal SDK script
            script.onload = this.renderPayPalButtons;
            document.body.appendChild(script);
        },
        renderPayPalButtons() {
            // Ensure PayPal SDK is loaded
            if (window.paypal) {
                window.paypal
                    .Buttons({
                        style: {
                            shape: "rect",
                            layout: "vertical",
                            color: "gold",
                            label: "paypal",
                        },
                        // Message options
                        message: {
                            amount: 100, // Example amount
                        },

                        // Create order
                        async createOrder() {
                            try {
                                const response = await fetch("/api/orders", {
                                    method: "POST",
                                    headers: {
                                        "Content-Type": "application/json",
                                    },
                                    // Pass cart info, like product IDs and quantities
                                    body: JSON.stringify({
                                        cart: [
                                            {
                                                id: "YOUR_PRODUCT_ID",
                                                quantity:
                                                    "YOUR_PRODUCT_QUANTITY",
                                            },
                                        ],
                                    }),
                                });

                                const orderData = await response.json();
                                if (orderData.id) {
                                    return orderData.id;
                                }
                                const errorDetail = orderData?.details?.[0];
                                const errorMessage = errorDetail
                                    ? `${errorDetail.issue} ${errorDetail.description} (${orderData.debug_id})`
                                    : JSON.stringify(orderData);

                                throw new Error(errorMessage);
                            } catch (error) {
                                console.error(error);
                                document.getElementById(
                                    "result-message"
                                ).innerHTML = `Could not initiate PayPal Checkout...<br><br>${error}`;
                            }
                        },

                        // Handle approval of payment
                        async onApprove(data, actions) {
                            try {
                                const response = await fetch(
                                    `/api/orders/${data.orderID}/capture`,
                                    {
                                        method: "POST",
                                        headers: {
                                            "Content-Type": "application/json",
                                        },
                                    }
                                );

                                const orderData = await response.json();

                                const errorDetail = orderData?.details?.[0];
                                if (
                                    errorDetail?.issue === "INSTRUMENT_DECLINED"
                                ) {
                                    // Handle declined instrument by restarting
                                    return actions.restart();
                                } else if (errorDetail) {
                                    throw new Error(
                                        `${errorDetail.description} (${orderData.debug_id})`
                                    );
                                } else if (!orderData.purchase_units) {
                                    throw new Error(JSON.stringify(orderData));
                                } else {
                                    // Successfully captured payment
                                    const transaction =
                                        orderData?.purchase_units?.[0]?.payments
                                            ?.captures?.[0] ||
                                        orderData?.purchase_units?.[0]?.payments
                                            ?.authorizations?.[0];

                                    document.getElementById(
                                        "result-message"
                                    ).innerHTML = `Transaction ${transaction.status}: ${transaction.id}<br><br>See console for all available details`;
                                    console.log(
                                        "Capture result",
                                        orderData,
                                        JSON.stringify(orderData, null, 2)
                                    );
                                }
                            } catch (error) {
                                console.error(error);
                                document.getElementById(
                                    "result-message"
                                ).innerHTML = `Sorry, your transaction could not be processed...<br><br>${error}`;
                            }
                        },
                    })
                    .render("#paypal-button-container");
            } else {
                console.error("PayPal SDK failed to load.");
            }
        },
    },
};
</script>

<style scoped>
/* Add any necessary styles */
</style>
